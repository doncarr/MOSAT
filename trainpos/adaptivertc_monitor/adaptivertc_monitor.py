#!/usr/bin/env python
# -*- coding: utf-8-*-

# Python module adaptivertc_monitor.py
# Autogenerated from adaptivertc_monitor.glade
# Generated on Wed Mar 12 00:06:08 2008

# Warning: Do not modify any context comment such as #--
# They are required to keep user's code
"""
This is software to create a monitor for control trains trainpos
Copyright (C) 2008 Geronimo Orozco Martinez

This program is free software; you can redistribute it and/or modify 
it under the terms of the GNU General Public License as published by 
the Free Software Foundation; either version 2 of the License, or 
(at your option) any later version.

This program is distributed in the hope that it will be useful, 
but WITHOUT ANY WARRANTY; without even the implied warranty of 
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
General Public License for more details.

You should have received a copy of the GNU General Public License along 
with this program; if not, write to the Free Software Foundation, Inc., 
59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
"""


import os

import gtk
import gtkmozembed

from SimpleGladeApp import SimpleGladeApp
from SimpleGladeApp import bindtextdomain

app_name = "adaptivertc_monitor"
app_version = "0.0.2"

glade_dir = ""
locale_dir = ""

bindtextdomain(app_name, locale_dir)


class Window1(SimpleGladeApp):

    def __init__(self, path="adaptivertc_monitor.glade",
                 root="window1",
                 domain=app_name, **kwargs):
        path = os.path.join(glade_dir, path)
        SimpleGladeApp.__init__(self, path, root, domain, **kwargs)

    #-- Window1.new {
    def new(self):
        pass
    #-- Window1.new }

    #-- Window1 custom methods {
    #   Write your own methods here
    #-- Window1 custom methods }

    #-- Window1.make_browser1 {
    def make_browser1(self, str1, str2, int1, int2):
        widget = gtkmozembed.MozEmbed()
        widget.load_url(str1)
        widget.show_all()
        return widget
    #-- Window1.make_browser1 }

    #-- Window1.make_browser2 {
    def make_browser2(self, str1, str2, int1, int2):
        widget = gtkmozembed.MozEmbed()
        widget.load_url(str1)
        widget.show_all()
        return widget
    #-- Window1.make_browser2 }

    #-- Window1.make_browser3 {
    def make_browser3(self, str1, str2, int1, int2):
        widget = gtkmozembed.MozEmbed()
        widget.load_url(str1)
        widget.show_all()
        return widget
    #-- Window1.make_browser3 }

def generate_glade_file():
    outfile = open("adaptivertc_monitor.glade-template","r")
    output = outfile.read()
    outfile.close()
    outfile = open("adaptivertc_monitor.glade","w")
    outfile.write(output.replace("{PWD}",os.path.abspath("../")))
    outfile.close()


#-- main {
def main():
    generate_glade_file()
    
    window1 = Window1()

    window1.run()

if __name__ == "__main__":
    main()

#-- main }
